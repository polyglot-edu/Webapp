name: Build and Deploy

on:
  push:
    branches: [main]

jobs:
  build:
    permissions: write-all
    name: Build and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to ghcr.io
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata from repository
      uses: docker/metadata-action@v3
      id: meta
      with:
        images: ghcr.io/${{ github.repository }}
    - name: Build and push to ghcr.io
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
            "DEPLOY_URL=https://polyglot-webapp.polyglot-edu.com"
            "BACK_URL=https://polyglot-api-staging.polyglot-edu.com"
            "TEST_MODE=true"
            "AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}"
            "AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}"
            "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}"
            "AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}"
            "AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}"
            "AUTH0_SCOPE=${{ secrets.AUTH0_SCOPE }}"
    - name: Push to ghcr.io with retries
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 5
        max_attempts: 5
        command: echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r i; do echo "Pushing $i"; docker push $i; done
    - name: Deploy to Kubernetes cluster
      run: |
        echo "$KUBECONFIG_FILE" > kubeconfig.yml
        export KUBECONFIG=$(pwd)/kubeconfig.yml

        echo "üîç Cluster Info:"
        kubectl cluster-info
        kubectl get nodes
        kubectl get pods -A

        echo "üöÄ Deploying with Helm..."
        helm upgrade polyglot-webapp charts \
          --install \
          --wait \
          --timeout 5m \
          --namespace=polyglot-webapp \
          --create-namespace \
          --atomic \
          --set=url=polyglot-webapp.polyglot-edu.com \
          --set=cfOriginKey=${{ secrets.CFORIGIN }} \
          --set=dockerconfigjson='${{ secrets.DOCKER_CONFIG }}' \
          --set=image.repository=${{ steps.meta.outputs.tags }}
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
